void INIT_REG_DSP (reg_1288 *dsp)
{
	int i=0;
	
 //dsp->output_delayab			  =0;
 dsp->SWRST = 0x0078;
 dsp->DEVID = 0x0000;
 dsp->INT   = 0x0000;
 dsp->INTE	= 0x0000;
 dsp->INTR  = 0xffff;

 dsp->SYNC  = 0x0000;
 dsp->SYNC  = (0<<15) // «1»включается «Master» синхронизации
			 |(0<<10) // Зарезервировано
			 |(0<<9 ) // Запись логической «1» вызывает сброс FIFO.
			 |(0<<8 ) // Запись «1» запускает процесс очистки трактов данных, включая сброс FIFO.
			 |(0<<3 ) // Зарезервировано
			 |(0<<2 ) // Синхронизация установки «точного» коэффициента усиления
			 |(0<<1 ) // Бит синхронной установки частоты и фазы гетеродинов всех каналов
			 |(0<<0 );// Запись «1» переводит 1288ХК1Т в состояние обработки сигнала и осуществляет синхронизацию старта нескольких микросхем.

  dsp->ADC_CFG = 0x0000;
  dsp->ADC_CFG = (0<<15)
				|(0<<14)  //enc_mode  | «1» соответствует выборке входных отсчетов по фронту ENCODE.Используется только в том случае, если сигнал ENCODE–входной (enc_dir =0 )
				|(0<<13)  //enc_phase |«0» соответствует тому, что активный уровень – высокий или же активный фронт – возрастающий;
				|(0<<12)  //enc_dir   |Управление источником сигнала ENCODE:«0» соответствует тому, что сигнал ENCODE является входным сигналом;
				|(0<<8 )  //enc_div   |Коэффициент деления выходной тактовой частоты ENCODE:0 - 1/1
				|(0<<7 )  //Тестовый бит. Для корректной работы должен быть установлен в 0
				|(0<<4 )  //Зарезервировано
				|(0<<0 ); //Тестовый бит. Для корректной работы должен быть установлен в 0

   dsp->RX_CFG = 0x0000;
   dsp->RX_CFG = (0<<15) //wr_all  | «1» соответствует одновременной записи во все каналы
				|(0<<11) //res     | 
				|(2<<9 ) //pf_mode | Режимы работы PF:- «0» соответствует тому, что активный - высокий уровень;
				|(0<<8 ) //out_fmt | Формат выходных данных каналов приема:«0» соответствует формату 16+16;
				|(1<<6 ) //Mode    | - «01» - двухканальный режим (объединяются каналы 1+2 и 3+4);
				|(0<<3 ) //in_type | Промежуточная частота, действительные данные
				|(0<<2 ) //Res     | Зарезервировано
				|(1<<0 );//in_fmt  | Формат входных данных каналов приема:Прямой

	dsp->RX_FIFO_THRESH = 20;//содержит шестнадцатибитовый порог заполненности FIFO каналов приема.

	dsp->RX_LINK = 0x0000;
	dsp->RX_LINK = (0<<6 ) //Зарезервировано
				  |(0<<4 ) //Делитель тактовой частоты линк-порта:PCLK/2 50 MHz
				  |(0<<3 ) //Зарезервировано
				  |(0<<1 ) //Делитель тактовой частоты линк-порта:8-битовый SHARС
				  |(1<<0 );//«1» соответствует тому, что линк - порт включен

	dsp-> RX1_LCFG = 0x0000;
	dsp-> RX1_LCFG = (1<<15)
					|(0<<14) //«1» приводит к включению дизеринга гетеродина
					|(0<<10) //Зарезервировано
					|(0<<8 ) //src |Выбор источника сигнала. Для комплексного сигнала:- выбор «src» соответствует компоненте I;
					|(0<<5 ) //Зарезервировано
					|(0<<4 ) //Разрешение прерывания от перегрузки ограничителя разрядности комплексного умножителя «z»
					|(0<<3 ) //Разрешение прерывания от перегрузки ограничителя разрядности второго каскада FIR - децимации
					|(0<<2 ) //Разрешение прерывания от перегрузки ограничителя разрядности первого каскада FIR - децимации
					|(0<<1 ) //Разрешение прерывания от перегрузки ограничителя разрядности второго каскада CIC - децимации
					|(0<<0 );//Разрешение прерывания от перегрузки ограничителя разрядности первого каскада CIC - децимации

	dsp-> RX2_LCFG = 0x0000;
	dsp-> RX2_LCFG = (1<<15)
					|(0<<14) //«1» приводит к включению дизеринга гетеродина
					|(0<<10) //Зарезервировано
					|(0<<8 ) //src |Выбор источника сигнала. Для комплексного сигнала:- выбор «src» соответствует компоненте I;
					|(0<<5 ) //Зарезервировано
					|(0<<4 ) //Разрешение прерывания от перегрузки ограничителя разрядности комплексного умножителя «z»
					|(0<<3 ) //Разрешение прерывания от перегрузки ограничителя разрядности второго каскада FIR - децимации
					|(0<<2 ) //Разрешение прерывания от перегрузки ограничителя разрядности первого каскада FIR - децимации
					|(0<<1 ) //Разрешение прерывания от перегрузки ограничителя разрядности второго каскада CIC - децимации
					|(0<<0 );//Разрешение прерывания от перегрузки ограничителя разрядности первого каскада CIC - децимации

	dsp-> RX3_LCFG = 0x0000;
	dsp-> RX3_LCFG = (1<<15)
					|(0<<14) //«1» приводит к включению дизеринга гетеродина
					|(0<<10) //Зарезервировано
					|(2<<8 ) //src |Выбор источника сигнала. Для комплексного сигнала:- выбор «src» соответствует компоненте I;
					|(0<<5 ) //Зарезервировано
					|(0<<4 ) //Разрешение прерывания от перегрузки ограничителя разрядности комплексного умножителя «z»
					|(0<<3 ) //Разрешение прерывания от перегрузки ограничителя разрядности второго каскада FIR - децимации
					|(0<<2 ) //Разрешение прерывания от перегрузки ограничителя разрядности первого каскада FIR - децимации
					|(0<<1 ) //Разрешение прерывания от перегрузки ограничителя разрядности второго каскада CIC - децимации
					|(0<<0 );//Разрешение прерывания от перегрузки ограничителя разрядности первого каскада CIC - децимации

	dsp-> RX4_LCFG = 0x0000;
	dsp-> RX4_LCFG = (1<<15)
					|(0<<14) //«1» приводит к включению дизеринга гетеродина
					|(0<<10) //Зарезервировано
					|(2<<8 ) //src |Выбор источника сигнала. Для комплексного сигнала:- выбор «src» соответствует компоненте I;
					|(0<<5 ) //Зарезервировано
					|(0<<4 ) //Разрешение прерывания от перегрузки ограничителя разрядности комплексного умножителя «z»
					|(0<<3 ) //Разрешение прерывания от перегрузки ограничителя разрядности второго каскада FIR - децимации
					|(0<<2 ) //Разрешение прерывания от перегрузки ограничителя разрядности первого каскада FIR - децимации
					|(0<<1 ) //Разрешение прерывания от перегрузки ограничителя разрядности второго каскада CIC - децимации
					|(0<<0 );//Разрешение прерывания от перегрузки ограничителя разрядности первого каскада CIC - децимации

	dsp-> RX1_DCIC2 = 0x0000;
	dsp-> RX1_DCIC2 = (1<<15)
					 |(31<<8 )  //Коэффициент децимации первой ступени CIC - дециматора:M = dr + 1
					 |(0<<4 )  //Зарезервировано
					 |(15 ); //Регулировка уровня выходного сигнала первой ступени CIC - дециматора.

	dsp-> RX2_DCIC2 = 0x0000;
	dsp-> RX2_DCIC2 = (0<<15)
					 |(31<<8)  //Коэффициент децимации первой ступени CIC - дециматора:M = dr + 1
					 |(0<<4 )  //Зарезервировано
					 |(15 ); //Регулировка уровня выходного сигнала первой ступени CIC - дециматора.

	dsp-> RX3_DCIC2 = 0x0000;
	dsp-> RX3_DCIC2 = (1<<15)
					 |(31<<8 )  //Коэффициент децимации первой ступени CIC - дециматора:M = dr + 1
					 |(0<<4 )  //Зарезервировано
					 |(15 ); //Регулировка уровня выходного сигнала первой ступени CIC - дециматора.

	dsp-> RX4_DCIC2 = 0x0000;
	dsp-> RX4_DCIC2 = (0<<15)
					 |(31<<8 )  //Коэффициент децимации первой ступени CIC - дециматора:M = dr + 1
					 |(0<<4 )  //Зарезервировано
					 |(15 ); //Регулировка уровня выходного сигнала первой ступени CIC - дециматора.

	dsp-> RX1_DCICN = 0x0000;
	dsp-> RX1_DCICN = (0<<14) //Биты конфигурации 2-й ступени CIC–дециматора:- «112» - 2-й каскад децимации включен в режиме CIC6
					 |(31<<8 ) //Коэффициент децимации 2-й ступени CIC-дециматора:M = dr + 1
					 |(0<<5 ) //Зарезервировано
					 |(1<<4 ) //Выбор диапазона регулировки уровня выходного сигнала 2-й ступени CIC-дециматора
					 |(15 );//Регулировка уровня выходного сигнала 2-й ступени CIC-дециматора:- если scl_mx = 1, то коэффициент передачи CIC–дециматора

	dsp-> RX2_DCICN = 0x0000;
	dsp-> RX2_DCICN = (0<<14) //Биты конфигурации 2-й ступени CIC–дециматора:- «112» - 2-й каскад децимации включен в режиме CIC6
					 |(31<<8 ) //Коэффициент децимации 2-й ступени CIC-дециматора:M = dr + 1
					 |(0<<5 ) //Зарезервировано
					 |(1<<4 ) //Выбор диапазона регулировки уровня выходного сигнала 2-й ступени CIC-дециматора
					 |(15 );//Регулировка уровня выходного сигнала 2-й ступени CIC-дециматора:- если scl_mx = 1, то коэффициент передачи CIC–дециматора

	dsp-> RX3_DCICN = 0x0000;
	dsp-> RX3_DCICN = (0<<14) //Биты конфигурации 2-й ступени CIC–дециматора:- «112» - 2-й каскад децимации включен в режиме CIC6
					 |(31<<8 ) //Коэффициент децимации 2-й ступени CIC-дециматора:M = dr + 1
					 |(0<<5 ) //Зарезервировано
					 |(1<<4 ) //Выбор диапазона регулировки уровня выходного сигнала 2-й ступени CIC-дециматора
					 |(6 );//Регулировка уровня выходного сигнала 2-й ступени CIC-дециматора:- если scl_mx = 1, то коэффициент передачи CIC–дециматора

	dsp-> RX4_DCICN = 0x0000;
	dsp-> RX4_DCICN = (0<<14) //Биты конфигурации 2-й ступени CIC–дециматора:- «112» - 2-й каскад децимации включен в режиме CIC6
					 |(31<<8 ) //Коэффициент децимации 2-й ступени CIC-дециматора:M = dr + 1
					 |(0<<5 ) //Зарезервировано
					 |(1<<4 ) //Выбор диапазона регулировки уровня выходного сигнала 2-й ступени CIC-дециматора
					 |(6 );//Регулировка уровня выходного сигнала 2-й ступени CIC-дециматора:- если scl_mx = 1, то коэффициент передачи CIC–дециматора

	dsp->RX1_DFIR1_CFG1 = 0x0000;
	dsp->RX1_DFIR1_CFG1 = (0  <<15) //Зарезервировано
						 |(0  <<14) //Симметричность:- «0» - симметричный;
						 |(63 <<8 ) //Установка порядка фильтра: Ntap = order + 1
						 |(0  <<4 ) //dly|Установка задержки синхронизации (0:15)  для двухканального режима!!!!
						 |(1     );//dr |Установка коэффициента децимации: M = (dr + 1)/2

	dsp->RX2_DFIR1_CFG1 = 0x0000;
	dsp->RX2_DFIR1_CFG1 = (0 <<15) //Зарезервировано
						 |(0 <<14) //Симметричность:- «0» - симметричный;
						 |(63<<8 ) //Установка порядка фильтра: Ntap = order + 1
						 |(1 <<4 ) //Установка задержки синхронизации (0:15)
						 |(1     );//Установка коэффициента децимации: M = (dr + 1)/2

	dsp->RX3_DFIR1_CFG1 = 0x0000;
	dsp->RX3_DFIR1_CFG1 = (0 <<15) //Зарезервировано
						 |(0 <<14) //Симметричность:- «0» - симметричный;
						 |(63<<8 ) //Установка порядка фильтра: Ntap = order + 1
						 |(0 <<4 ) //Установка задержки синхронизации (0:15)  для двухканального режима!!!!
						 |(1     );//Установка коэффициента децимации: M = dr + 1

	dsp->RX4_DFIR1_CFG1 = 0x0000;
	dsp->RX4_DFIR1_CFG1 = (0 <<15) //Зарезервировано
						 |(0 <<14) //Симметричность:- «0» - симметричный;
						 |(63<<8 ) //Установка порядка фильтра: Ntap = order + 1
						 |(1 <<4 ) //Установка задержки синхронизации (0:15)
						 |(1     );//Установка коэффициента децимации: M = dr + 1

	dsp->RX1_DFIR1_CFG2 = 0x0000;
	dsp->RX1_DFIR1_CFG2 = (0<<4 ) //Зарезервировано
						 |(5);//Регулировка уровня выходного сигнала DFIR1.Коэффициент усиления на выходе DFIR1 равен 2scl-21

	dsp->RX2_DFIR1_CFG2 = 0x0000;
	dsp->RX2_DFIR1_CFG2 = (0<<4 ) //Зарезервировано
						 |(5);//Регулировка уровня выходного сигнала DFIR1.Коэффициент усиления на выходе DFIR1 равен 2scl-21

	dsp->RX3_DFIR1_CFG2 = 0x0000;
	dsp->RX3_DFIR1_CFG2 = (0<<4 ) //Зарезервировано
						 |(4);//Регулировка уровня выходного сигнала DFIR1.Коэффициент усиления на выходе DFIR1 равен 2scl-21

	dsp->RX4_DFIR1_CFG2 = 0x0000;
	dsp->RX4_DFIR1_CFG2 = (0<<4 ) //Зарезервировано
					     |(4);//Регулировка уровня выходного сигнала DFIR1.Коэффициент усиления на выходе DFIR1 равен 2scl-21


	dsp->RX1_DFIR2_CFG1 = 0x0000;
	dsp->RX1_DFIR2_CFG1 = (0 <<15) //Зарезервировано
						 |(0 <<14) //Симметричность:- «0» - симметричный;
						 |(63<<8 ) //Установка порядка фильтра: Ntap = order + 1
						 |(0 <<4 ) //Установка задержки синхронизации (0:15)
						 |(1     );//Установка коэффициента децимации: (M = dr + 1)/2

	dsp->RX2_DFIR2_CFG1 = 0x0000;
	dsp->RX2_DFIR2_CFG1 = (0 <<15) //Зарезервировано
						 |(0 <<14) //Симметричность:- «0» - симметричный;
						 |(63<<8 ) //Установка порядка фильтра: Ntap = order + 1
						 |(1 <<4 ) //Установка задержки синхронизации (0:15)
						 |(1     );//Установка коэффициента децимации: (M = dr + 1)/2

	dsp->RX3_DFIR2_CFG1 = 0x0000;
	dsp->RX3_DFIR2_CFG1 = (0 <<15) //Зарезервировано
						 |(0 <<14) //Симметричность:- «0» - симметричный;
						 |(63<<8 ) //Установка порядка фильтра: Ntap = order + 1
						 |(0 <<4 ) //Установка задержки синхронизации (0:15)
						 |(1     );//Установка коэффициента децимации: (M = dr + 1)/2

	dsp->RX4_DFIR2_CFG1 = 0x0000;
	dsp->RX4_DFIR2_CFG1 = (0 <<15) //Зарезервировано
						 |(0 <<14) //Симметричность:- «0» - симметричный;
						 |(63<<8 ) //Установка порядка фильтра: Ntap = order + 1
						 |(1 <<4 ) //Установка задержки синхронизации (0:15)
						 |(1     );//Установка коэффициента децимации: M = (dr + 1)/2

	dsp->RX1_DFIR2_CFG2 = 0x0000;
	dsp->RX1_DFIR2_CFG2 = (0 <<4) //Зарезервировано
						 |(6);//Регулировка уровня выходного сигнала DFIR2.Коэффициент усиления на выходе DFIR2 равен 2scl-21

	dsp->RX2_DFIR2_CFG2 = 0x0000;
	dsp->RX2_DFIR2_CFG2 = (0 <<4) //Зарезервировано
						 |(6);//Регулировка уровня выходного сигнала DFIR2.Коэффициент усиления на выходе DFIR2 равен 2scl-21

	dsp->RX3_DFIR2_CFG2 = 0x0000;
	dsp->RX3_DFIR2_CFG2 = (0 <<4) //Зарезервировано
						 |(6);//Регулировка уровня выходного сигнала DFIR2.Коэффициент усиления на выходе DFIR2 равен 2scl-21

	dsp->RX4_DFIR2_CFG2 = 0x0000;
	dsp->RX4_DFIR2_CFG2 = (0 <<4) //Зарезервировано
						 |(6);//Регулировка уровня выходного сигнала DFIR2.Коэффициент усиления на выходе DFIR2 равен 2scl-21

//-------------Для обновления внутренних значений необходимо записать «1» в бит SYNC_sync_nco.	----------------------------

	dsp->RX1_NCO_PHASE = 0x0000; //регистр установки начальной фазы
	dsp->RX2_NCO_PHASE = 0x0000; //регистр установки начальной фазы
	dsp->RX3_NCO_PHASE = 0x0000; //регистр установки начальной фазы
	dsp->RX4_NCO_PHASE = 0x0000; //регистр установки начальной фазы

	dsp->RX1_NCO_FRQL  = 0x0000;//25 MHz
	dsp->RX1_NCO_FRQH  = 0x4000;

	dsp->RX2_NCO_FRQL  = 0x0000;//25 MHz
	dsp->RX2_NCO_FRQH  = 0x4000;

	dsp->RX3_NCO_FRQL  = 0x0000;//25 MHz
	dsp->RX3_NCO_FRQH  = 0x4000;

	dsp->RX4_NCO_FRQL  = 0x0000;//25 MHz
	dsp->RX4_NCO_FRQH  = 0x4000;

//-------------Для обновления внутренних значений необходимо записать «1» в бит SYNC_sync_gain.	--------------------------

	dsp->RX1_GAIN_I = 0x2000;//регистры установки комплексного коэффициента усиления (GAIN_I+j*GAIN_Q) Используемая кодировка – дополнение до двух
	dsp->RX1_GAIN_Q = 0x2000;

	dsp->RX2_GAIN_I = 0x2000;//регистры установки комплексного коэффициента усиления (GAIN_I+j*GAIN_Q) Используемая кодировка – дополнение до двух
	dsp->RX2_GAIN_Q = 0x2000;

	dsp->RX3_GAIN_I = 0x2000;//регистры установки комплексного коэффициента усиления (GAIN_I+j*GAIN_Q) Используемая кодировка – дополнение до двух
	dsp->RX3_GAIN_Q = 0x2000;

	dsp->RX4_GAIN_I = 0x2000;//регистры установки комплексного коэффициента усиления (GAIN_I+j*GAIN_Q) Используемая кодировка – дополнение до двух
	dsp->RX4_GAIN_Q = 0x2000;

//-----При четном порядке фильтра коэффициенты записываются как есть. При нечетном
//		порядке фильтра записываемое значение центрального коэффициента должно быть равно
//			половине значения центрального коэффициента.
//				Нечетные регистры зарезервированы для расширения разрядности коэффициентов.

dsp->RX1_CF_DFIR1[0]  =18;
dsp->RX1_CF_DFIR1[1]  =0;
dsp->RX1_CF_DFIR1[2]  =26;
dsp->RX1_CF_DFIR1[3]  =0;
dsp->RX1_CF_DFIR1[4]  =-2;
dsp->RX1_CF_DFIR1[5]  =0;
dsp->RX1_CF_DFIR1[6]  =-34;
dsp->RX1_CF_DFIR1[7]  =0;
dsp->RX1_CF_DFIR1[8]  =-22;
dsp->RX1_CF_DFIR1[9]  =0;
dsp->RX1_CF_DFIR1[10]  =34;
dsp->RX1_CF_DFIR1[11]  =0;
dsp->RX1_CF_DFIR1[12]  =59;
dsp->RX1_CF_DFIR1[13]  =0;
dsp->RX1_CF_DFIR1[14]  =-5;
dsp->RX1_CF_DFIR1[15]  =0;
dsp->RX1_CF_DFIR1[16]  =-90;
dsp->RX1_CF_DFIR1[17]  =0;
dsp->RX1_CF_DFIR1[18]  =-59;
dsp->RX1_CF_DFIR1[19]  =0;
dsp->RX1_CF_DFIR1[20]  =87;
dsp->RX1_CF_DFIR1[21]  =0;
dsp->RX1_CF_DFIR1[22]  =149;
dsp->RX1_CF_DFIR1[23]  =0;
dsp->RX1_CF_DFIR1[24]  =-11;
dsp->RX1_CF_DFIR1[25]  =0;
dsp->RX1_CF_DFIR1[26]  =-215;
dsp->RX1_CF_DFIR1[27]  =0;
dsp->RX1_CF_DFIR1[28]  =-141;
dsp->RX1_CF_DFIR1[29]  =0;
dsp->RX1_CF_DFIR1[30]  =191;
dsp->RX1_CF_DFIR1[31]  =0;
dsp->RX1_CF_DFIR1[32]  =329;
dsp->RX1_CF_DFIR1[33]  =0;
dsp->RX1_CF_DFIR1[34]  =-18;
dsp->RX1_CF_DFIR1[35]  =0;
dsp->RX1_CF_DFIR1[36]  =-451;
dsp->RX1_CF_DFIR1[37]  =0;
dsp->RX1_CF_DFIR1[38]  =-299;
dsp->RX1_CF_DFIR1[39]  =0;
dsp->RX1_CF_DFIR1[40]  =384;
dsp->RX1_CF_DFIR1[41]  =0;
dsp->RX1_CF_DFIR1[42]  =674;
dsp->RX1_CF_DFIR1[43]  =0;
dsp->RX1_CF_DFIR1[44]  =-25;
dsp->RX1_CF_DFIR1[45]  =0;
dsp->RX1_CF_DFIR1[46]  =-923;
dsp->RX1_CF_DFIR1[47]  =0;
dsp->RX1_CF_DFIR1[48]  =-639;
dsp->RX1_CF_DFIR1[49]  =0;
dsp->RX1_CF_DFIR1[50]  =807;
dsp->RX1_CF_DFIR1[51]  =0;
dsp->RX1_CF_DFIR1[52]  =1514;
dsp->RX1_CF_DFIR1[53]  =0;
dsp->RX1_CF_DFIR1[54]  =-30;
dsp->RX1_CF_DFIR1[55]  =0;
dsp->RX1_CF_DFIR1[56]  =-2399;
dsp->RX1_CF_DFIR1[57]  =0;
dsp->RX1_CF_DFIR1[58]  =-1974;
dsp->RX1_CF_DFIR1[59]  =0;
dsp->RX1_CF_DFIR1[60]  =3060;
dsp->RX1_CF_DFIR1[61]  =0;
dsp->RX1_CF_DFIR1[62]  =9875;
dsp->RX1_CF_DFIR1[63]  =0; 



for (i=0;i<64;i++) dsp->RX2_CF_DFIR1[i] = dsp->RX1_CF_DFIR1[i];  
for (i=0;i<64;i++) dsp->RX3_CF_DFIR1[i] = dsp->RX1_CF_DFIR1[i];  
for (i=0;i<64;i++) dsp->RX4_CF_DFIR1[i] = dsp->RX1_CF_DFIR1[i]; 

//-----При четном порядке фильтра коэффициенты записываются как есть. При нечетном
//		порядке фильтра записываемое значение центрального коэффициента должно быть равно
//			половине значения центрального коэффициента.
//				Нечетные регистры зарезервированы для расширения разрядности коэффициентов.

dsp->RX1_CF_DFIR2[0]  =18;
dsp->RX1_CF_DFIR2[1]  =0;
dsp->RX1_CF_DFIR2[2]  =26;
dsp->RX1_CF_DFIR2[3]  =0;
dsp->RX1_CF_DFIR2[4]  =-2;
dsp->RX1_CF_DFIR2[5]  =0;
dsp->RX1_CF_DFIR2[6]  =-34;
dsp->RX1_CF_DFIR2[7]  =0;
dsp->RX1_CF_DFIR2[8]  =-22;
dsp->RX1_CF_DFIR2[9]  =0;
dsp->RX1_CF_DFIR2[10]  =34;
dsp->RX1_CF_DFIR2[11]  =0;
dsp->RX1_CF_DFIR2[12]  =59;
dsp->RX1_CF_DFIR2[13]  =0;
dsp->RX1_CF_DFIR2[14]  =-5;
dsp->RX1_CF_DFIR2[15]  =0;
dsp->RX1_CF_DFIR2[16]  =-90;
dsp->RX1_CF_DFIR2[17]  =0;
dsp->RX1_CF_DFIR2[18]  =-59;
dsp->RX1_CF_DFIR2[19]  =0;
dsp->RX1_CF_DFIR2[20]  =87;
dsp->RX1_CF_DFIR2[21]  =0;
dsp->RX1_CF_DFIR2[22]  =149;
dsp->RX1_CF_DFIR2[23]  =0;
dsp->RX1_CF_DFIR2[24]  =-11;
dsp->RX1_CF_DFIR2[25]  =0;
dsp->RX1_CF_DFIR2[26]  =-215;
dsp->RX1_CF_DFIR2[27]  =0;
dsp->RX1_CF_DFIR2[28]  =-141;
dsp->RX1_CF_DFIR2[29]  =0;
dsp->RX1_CF_DFIR2[30]  =191;
dsp->RX1_CF_DFIR2[31]  =0;
dsp->RX1_CF_DFIR2[32]  =329;
dsp->RX1_CF_DFIR2[33]  =0;
dsp->RX1_CF_DFIR2[34]  =-18;
dsp->RX1_CF_DFIR2[35]  =0;
dsp->RX1_CF_DFIR2[36]  =-451;
dsp->RX1_CF_DFIR2[37]  =0;
dsp->RX1_CF_DFIR2[38]  =-299;
dsp->RX1_CF_DFIR2[39]  =0;
dsp->RX1_CF_DFIR2[40]  =384;
dsp->RX1_CF_DFIR2[41]  =0;
dsp->RX1_CF_DFIR2[42]  =674;
dsp->RX1_CF_DFIR2[43]  =0;
dsp->RX1_CF_DFIR2[44]  =-25;
dsp->RX1_CF_DFIR2[45]  =0;
dsp->RX1_CF_DFIR2[46]  =-923;
dsp->RX1_CF_DFIR2[47]  =0;
dsp->RX1_CF_DFIR2[48]  =-639;
dsp->RX1_CF_DFIR2[49]  =0;
dsp->RX1_CF_DFIR2[50]  =807;
dsp->RX1_CF_DFIR2[51]  =0;
dsp->RX1_CF_DFIR2[52]  =1514;
dsp->RX1_CF_DFIR2[53]  =0;
dsp->RX1_CF_DFIR2[54]  =-30;
dsp->RX1_CF_DFIR2[55]  =0;
dsp->RX1_CF_DFIR2[56]  =-2399;
dsp->RX1_CF_DFIR2[57]  =0;
dsp->RX1_CF_DFIR2[58]  =-1974;
dsp->RX1_CF_DFIR2[59]  =0;
dsp->RX1_CF_DFIR2[60]  =3060;
dsp->RX1_CF_DFIR2[61]  =0;
dsp->RX1_CF_DFIR2[62]  =9875;
dsp->RX1_CF_DFIR2[63]  =0; 

for (i=0;i<64;i++) dsp->RX2_CF_DFIR2[i] = dsp->RX1_CF_DFIR2[i]; 
for (i=0;i<64;i++) dsp->RX3_CF_DFIR2[i] = dsp->RX1_CF_DFIR2[i];  
for (i=0;i<64;i++) dsp->RX4_CF_DFIR2[i] = dsp->RX1_CF_DFIR2[i]; 


}